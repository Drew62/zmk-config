/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        hm: hm {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mods";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&trans  &kp Q       &kp W       &kp E               &kp R             &kp T      &kp Y      &kp U             &kp I               &kp O           &kp P              &trans
&trans  &hm LGUI A  &hm LALT S  &hm LEFT_CONTROL D  &hm LEFT_SHIFT F  &kp G      &kp H      &hm LEFT_SHIFT J  &hm LEFT_CONTROL K  &hm LEFT_ALT L  &hm LEFT_GUI SEMI  &trans
&trans  &kp Z       &kp X       &kp C               &kp V             &kp B      &kp N      &kp M             &kp COMMA           &kp DOT         &kp FSLH           &trans
                                &to 1               &kp TAB           &kp RET    &kp SPACE  &kp BSPC          &to 2
            >;
        };

        layer_1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp CARET   &kp PLUS   &kp BSLH      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp EXCL    &kp EQUAL  &kp SLASH     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp DOLLAR  &kp MINUS  &kp ASTERISK  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
                        &to 0   &trans  &trans    &trans      &trans     &to 2
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &to 1   &trans  &trans    &trans  &trans  &to 0
            >;
        };
    };
};